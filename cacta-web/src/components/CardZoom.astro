---
import { Image } from "astro:assets";
interface Props {
	image?: ImageMetadata;
	preTitle?: string;
	title?: string;
	description?: string;
}
const { title, description, image, preTitle } = Astro.props;
---

<div
	class="w-[50vw] h-auto min-h-[50%] bg-white border border-gray-200 rounded-lg card">
	<Image
		class="object-cover image w-1/2 min-w-[350px]"
		src={image}
		alt={`image about ${image}`}
	/>

	<div class="p-5 relative w-1/2 h-auto">
		<p class="font-normal text-gray-700">
			{preTitle}
		</p>

		<h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900">
			{title}
		</h5>

		<p class="mb-5 font-normal text-gray-700">
			{description}
		</p>
	</div>
	<a
		href="/#metrics"
		class="absolute top-0 right-0 inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg focus:ring-4 focus:outline-none focus:ring-blue-300">
		<svg
			class="rotate-180 w-3.5 h-3.5 mr-1"
			aria-hidden="true"
			fill="none"
			viewBox="0 0 14 10">
			<path
				stroke="currentColor"
				stroke-linecap="round"
				stroke-linejoin="round"
				stroke-width="2"
				d="M1 5h12m0 0L9 1m4 4L9 9"></path>
		</svg>
		{" "}Go back
	</a>
</div>

<style>
	.card {
		transition: box-shadow 0.2s ease-in-out;
		border-radius: 1rem;
		display: flex;
	}
	.card:nth-child(1) {
		transform: translate(0, 10em);
	}
	.card:nth-child(2) {
		transform: translate(0, -10em);
	}
	.card:nth-child(3) {
		transform: translate(0, 0em);
	}
	.card:hover {
		filter: drop-shadow(0 0 0.05rem #63e);
		cursor: crosshair;
	}
	a {
		background: radial-gradient(125% 125% at 50% 10%, #fff 00%, #63e 100%);
		color: black;
		transition: all 0.2s ease-in-out;
		border-radius: 0 1rem 0 1rem;
	}
	a:hover {
		background: #63e;
		color: #fff;
		transform: scale(1.02);
	}
	.card {
		animation: zoomIn linear both;

		animation-timeline: view();
		animation-range: entry 20% cover 30%;

		will-change: filter;
		transition: filter 300ms;
		view-transition-name: card;
	}
	.image {
		object-fit: cover;
		object-position: center;
		border-radius: 1rem 0 0 1rem;
	}

	@keyframes zoomIn {
		from {
			opacity: 0.2;
			transform: translate3d(0, 10em, 0);
		}
	}
</style>
